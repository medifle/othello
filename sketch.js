"use strict";let board,reachableSpots,lastPlay,hash,counts,curPlayerIndex;const players=["B","W"];let human=[!0,!1];const ai=["alphabeta","mtdf_id"],aiDepth=[6,6],simulationRound=[500,500];let squareWidth,squareHeight,history,scoreBoard,interval=30,nodeCount=0,globalAlphabetaCount=0,globalMTDfIdCount=0,localMTDfIdCount=0;const zobristTable=make3DrandomArray(8,8,2),transpositionTable=new Map;function make3DrandomArray(e,a,t){return Array(e).fill(0).map(e=>Array(a).fill(0).map(e=>Array(t).fill(0).map(e=>bigInt.randBetween(0,2**64).value)))}function computeBoardHash(){let e=BigInt(0);for(let a=0;a<8;++a)for(let t=0;t<8;++t){let r=board[a][t],o=players.indexOf(r);-1!==o&&(e^=zobristTable[a][t][o])}return e}function updateBoardHash(e,a,t){let r=board[e][a],o=players.indexOf(r);-1!==o&&(hash^=zobristTable[e][a][o]),hash^=zobristTable[e][a][t]}function start(){board=[["","","","","","","",""],["","","","","","","",""],["","","A","A","A","A","",""],["","","A","W","B","A","",""],["","","A","B","W","A","",""],["","","A","A","A","A","",""],["","","","","","","",""],["","","","","","","",""]],counts=[2,2],lastPlay=[-1,-1],reachableSpots=[],curPlayerIndex=0;for(let e=0;e<8;e++)for(let a=0;a<8;a++)"A"===board[a][e]&&reachableSpots.push([a,e]);history.html(""),updateScoreBoard(),human[curPlayerIndex]||setTimeout(nextTurn.bind(null,ai[curPlayerIndex]),interval)}function coreMove(e,a,t){hash&&updateBoardHash(e,a,t),board[e][a]=players[t],counts[t]++,updateReachableSpots(e,a,t);let r=players[t],o=players[1^t];for(let l=-1;l<=1;l++)for(let n=-1;n<=1;n++)if(n||l){let s=1;for(;getPlayer(e+n*s,a+l*s)===o;)s++;if(s>1&&getPlayer(e+n*s,a+l*s)===r)for(;s>1;)s--,flipDisc(e+n*s,a+l*s,t)}}function move(e,a){coreMove(e,a,curPlayerIndex),lastPlay[0]=e,lastPlay[1]=a,updateScoreBoard(),addList(`(${e+1},${a+1})`)}function isInBoard(e,a){return e>=0&&e<8&&a>=0&&a<8}function getPlayer(e,a){if(isInBoard(e,a))return board[e][a]}function updateReachableSpots(e,a,t){for(let t=-1;t<=1;t++){let r=a+t;for(let a=-1;a<=1;a++)if(a||t){let t=e+a;""===getPlayer(t,r)&&(reachableSpots.push([t,r]),board[t][r]="A")}}}function flipDisc(e,a,t){hash&&updateBoardHash(e,a,t),board[e][a]=players[t],counts[t]+=1,counts[1^t]-=1}function isAvailablePlayer(e,a,t){let r=players[1^t];const o=players[t];for(let t=-1;t<=1;t++)for(let l=-1;l<=1;l++)if(l||t){let n=1;for(;getPlayer(e+l*n,a+t*n)===r;)n++;if(n>1&&getPlayer(e+l*n,a+t*n)===o)return!0}return!1}function hasAvailablePlayer(e){for(let a of reachableSpots)if(isAvailablePlayer(a[0],a[1],e))return!0;return!1}function checkWinner(){if(isGameOver())return counts[0]>counts[1]?"B":counts[1]>counts[0]?"W":"T"}function randomAI(){let e,a;do{e=floor(random(reachableSpots.length)),a=reachableSpots[e]}while(!isAvailablePlayer(a[0],a[1],curPlayerIndex));return e}function corners(e){let a=[];const t=players[e];let r=7;for(let e=0;e<7;e++){for(let o=0;o<r;o++){if(board[o][e]!==t){r=o;break}a[8*o+e]=!0}if(0===r)break}r=7;for(let e=7;e>0;e--){for(let o=0;o<r;o++){if(board[o][e]!==t){r=o;break}a[8*o+e]=!0}if(0===r)break}r=0;for(let e=0;e<7;e--){for(let o=7;o>r;o--){if(board[o][e]!==t){r=o;break}a[8*o+e]=!0}if(7===r)break}r=0;for(let e=7;e>0;e--){for(let o=7;o>r;o--){if(board[o][e]!==t){r=o;break}a[8*o+e]=!0}if(7===r)break}return a.filter(e=>e).length}function countAvailablePlayer(e){let a=0;for(let t of reachableSpots)isAvailablePlayer(t[0],t[1],e)&&(a+=1);return a}function evaluate(e=!1){const a=1^curPlayerIndex;return e?counts[curPlayerIndex]>counts[a]?1e6+counts[curPlayerIndex]:counts[a]>counts[curPlayerIndex]?-1e6-counts[a]:0:1e4*(corners(curPlayerIndex)-corners(a))+100*(countAvailablePlayer(curPlayerIndex)-countAvailablePlayer(a))+(counts[curPlayerIndex]-counts[a])}function isGameOver(){return!hasAvailablePlayer(0)&&!hasAvailablePlayer(1)}function expand(e){const a=[];for(let t=0;t<reachableSpots.length;t++){let r=reachableSpots[t];isAvailablePlayer(r[0],r[1],e)&&a.push(r.concat(t))}return a}function alphabetaMemo(e,a,t,r,o=!1){const l=transpositionTable.get(hash);if(l&&l.depth>=a){const{lowerbound:e,upperbound:a}=l;if(e){if(e>=r)return o?{index:l.index,bestScore:e}:e;t=max(t,e)}if(a){if(a<=t)return o?{index:l.index,bestScore:a}:a;r=min(r,a)}}if(isGameOver())return evaluate(!0);if(0===a)return evaluate();let n=expand(e);if(0===n.length)return evaluate();const s=[...reachableSpots],i=board.map(e=>e.slice(0)),c=[...counts],u=hash;let d,h,f,p=-1;if(e===curPlayerIndex){d=-1/0,h=t;for(let t of n){nodeCount+=1;let o=t[2];reachableSpots.splice(o,1),coreMove(t[0],t[1],e);let l=alphabetaMemo(1^e,a-1,h,r);if(l>d&&(d=l,p=o),reachableSpots=[...s],board=i.map(e=>e.slice(0)),counts=[...c],hash=u,h=max(h,l),h>=r)break}}else{d=1/0,f=r;for(let r of n){nodeCount+=1;let o=r[2];reachableSpots.splice(o,1),coreMove(r[0],r[1],e);let l=alphabetaMemo(1^e,a-1,t,f);if(l<d&&(d=l,p=o),reachableSpots=[...s],board=i.map(e=>e.slice(0)),counts=[...c],hash=u,f=min(f,l),t>=f)break}}return d<=t&&transpositionTable.set(hash,{depth:a,upperbound:d,index:p}),d>t&&d<r&&transpositionTable.set(hash,{depth:a,upperbound:d,lowerbound:d,index:p}),d>=r&&transpositionTable.set(hash,{depth:a,lowerbound:d,index:p}),o?{index:p,bestScore:d}:d}function MTDF(e,a){let t,r;nodeCount=0;let o=e,l=1/0,n=-1/0;for(hash=computeBoardHash();n<l;)t=max(o,n+1),({bestScore:o,index:r}=alphabetaMemo(curPlayerIndex,a,t-1,t,!0)),o<t?l=o:n=o;return localMTDfIdCount+=nodeCount,{g:o,index:r}}function MTDF_ID(e){localMTDfIdCount=0;let a,t=0,r=0,o=!1;for(let l=1;l<=e;++l)o?({g:t,index:a}=MTDF(t,l)):({g:r,index:a}=MTDF(r,l)),o=!o;return console.log("MTDF_ID: nodeCount",localMTDfIdCount),globalMTDfIdCount+=localMTDfIdCount,a}function alphabetaAI(e,a,t,r,o=!1){if(o&&(nodeCount=0),isGameOver())return evaluate(!0);if(0===a)return evaluate();let l=expand(e);if(0===l.length)return evaluate();const n=[...reachableSpots],s=board.map(e=>e.slice(0)),i=[...counts];let c,u=-1;if(e===curPlayerIndex){c=-1/0;for(let o of l){nodeCount+=1;let l=o[2];reachableSpots.splice(l,1),coreMove(o[0],o[1],e);let d=alphabetaAI(1^e,a-1,t,r);if(d>c&&(c=d,u=l),reachableSpots=[...n],board=s.map(e=>e.slice(0)),counts=[...i],(t=max(t,d))>=r)break}}else{c=1/0;for(let o of l){nodeCount+=1;let l=o[2];reachableSpots.splice(l,1),coreMove(o[0],o[1],e);let d=alphabetaAI(1^e,a-1,t,r);if(d<c&&(c=d,u=l),reachableSpots=[...n],board=s.map(e=>e.slice(0)),counts=[...i],t>=(r=min(r,d)))break}}return o?(console.log("alphabetaAI: nodeCount",nodeCount),globalAlphabetaCount+=nodeCount,{index:u,bestScore:c}):c}function MCS_simulate(e,a){const t=[...reachableSpots],r=board.map(e=>e.slice(0)),o=[...counts];let l=a,n=0;for(let a=0;a<e;++a){for(;!isGameOver();){let e=expand(l);if(e.length>0){let a=random(e),t=a[2];reachableSpots.splice(t,1),coreMove(a[0],a[1],l)}l^=1}checkWinner()===players[curPlayerIndex]&&(n+=1),reachableSpots=[...t],board=r.map(e=>e.slice(0)),counts=[...o]}return n/e}function MCS(e){let a=curPlayerIndex,t=-1/0,r=-1;const o=[...reachableSpots],l=board.map(e=>e.slice(0)),n=[...counts];let s=expand(a);for(let i of s){let s=i[2];reachableSpots.splice(s,1),coreMove(i[0],i[1],a);let c=MCS_simulate(e,1^a);c>t&&(t=c,r=s),reachableSpots=[...o],board=l.map(e=>e.slice(0)),counts=[...n]}return console.log("MCS score "+t),r}function nextTurn(e="random"){let a=!1;if(hasAvailablePlayer(curPlayerIndex)){if(human[curPlayerIndex])return;let a;const t=performance.now();switch(e){case"random":a=randomAI();break;case"alphabeta":({index:a}=alphabetaAI(curPlayerIndex,aiDepth[curPlayerIndex],-1/0,1/0,!0));break;case"mtdf":({index:a}=MTDF(0,aiDepth[curPlayerIndex]));break;case"mtdf_id":a=MTDF_ID(aiDepth[curPlayerIndex]);break;case"mcs":shuffle(reachableSpots,!0),a=MCS(simulationRound[curPlayerIndex])}const r=performance.now();console.log(e+" lapse:",r-t);let o=reachableSpots.splice(a,1)[0];move(o[0],o[1])}else a=!0;let t=checkWinner();t?addFinalResult(gameResultToText(t)):(a&&addList("pass"),curPlayerIndex^=1,setTimeout(nextTurn.bind(null,ai[curPlayerIndex]),interval))}function gameResultToText(e){let a="";switch(e){case"B":a="Black wins";break;case"W":a="White wins";break;case"T":a="Tie!"}return a}function loadState(e){for(let a of e){let e=reachableSpots.findIndex(e=>e[0]===a[0]-1&&e[1]===a[1]-1);reachableSpots.splice(e,1)[0],move(a[0]-1,a[1]-1),curPlayerIndex^=1}}function addFinalResult(e){scoreBoard.elt.innerHTML+="<br/>"+e}function addList(e){let a=createDiv(`${players[curPlayerIndex]}:${e}`);history.child(a),history.elt.scrollTop=history.elt.scrollHeight}function updateScoreBoard(){scoreBoard.html(`Black: ${counts[0]} &nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp; White: ${counts[1]}`)}function mousePressed(){if(human[curPlayerIndex]){let e=floor((mouseX-squareWidth/2)/squareWidth),a=floor((mouseY-squareHeight/2)/squareHeight);if(isInBoard(e,a)){let t=reachableSpots.findIndex(t=>t[0]===e&&t[1]===a);t>=0&&isAvailablePlayer(e,a,curPlayerIndex)&&(reachableSpots.splice(t,1),move(e,a),curPlayerIndex^=1,setTimeout(nextTurn.bind(null,ai[curPlayerIndex]),interval))}}}function setup(){createCanvas(432,432),frameRate(30),squareWidth=width/9,squareHeight=height/9,history=createDiv(),history.position(460,squareHeight/2),history.size(110,480),history.style("border","black 1px solid"),history.style("padding","4px"),history.style("box-sizing","border-box"),history.style("font-family","monospace"),history.style("font-size","20px"),history.style("overflow-y","scroll"),scoreBoard=createDiv(),scoreBoard.style("font-size","32px"),scoreBoard.style("font-weight","300"),scoreBoard.style("text-align","center"),scoreBoard.style("width",width+"px"),scoreBoard.position(0,height),start()}let hint=!0,fadeLowerBound=15,fadeUpperBound=100,fade=fadeLowerBound,fadeSpeed=.45;function draw(){background(244,248,252),rectMode(CORNER),noStroke(),fill(0),textSize(.4*squareHeight),textAlign(CENTER,CENTER);for(let e=0;e<8;e++)text(e+1,squareWidth/4,squareHeight*e+squareHeight),text(e+1,squareWidth*e+squareWidth,squareHeight/4);rectMode(CENTER);for(let e=0;e<8;e++)for(let a=0;a<8;a++){let t=squareWidth*a+squareWidth,r=squareHeight*e+squareHeight,o=board[a][e];strokeWeight(2),stroke(0),""===o?fill(0,102,50):fill(0,153,76),rect(t,r,squareWidth,squareHeight),o===players[0]?(noStroke(),fill(0),ellipse(t,r,.75*squareWidth)):o===players[1]?(noStroke(),fill(255),ellipse(t,r,.75*squareWidth)):human[curPlayerIndex]&&isAvailablePlayer(a,e,curPlayerIndex)&&hint&&(stroke(102,102,102,fade),(fade<fadeLowerBound||fade>fadeUpperBound)&&(fadeSpeed*=-1),fade+=fadeSpeed,ellipse(t,r,.5*squareWidth),noFill(),ellipse(t,r,.7*squareWidth)),a===lastPlay[0]&&e===lastPlay[1]&&(strokeWeight(1.5),stroke(244,67,54,210),noFill(),ellipse(t,r,.75*squareWidth))}}